allprojects {
    //创建项目时填写
    group 'com.penguins.cloud'
    version '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'idea'

    //jdk版本
    sourceCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        mavenLocal()
        maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
    }

    ext {
        camundaVersion = '7.14.0'
    }

    //项目中所使用到的依赖，这里添加的依赖会被所有项目，包括root项目继承
    dependencies {
//        testCompile("junit:junit:$junitVersion")
//        compile("org.slf4j:slf4j-api:$slf4jVersion")
        compile("org.slf4j:slf4j-api:1.7.16")
        //另外一种形式 (group + name + version) compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.16'
    }
}

//设定子模块项目中的配置
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    //spring boot 插件
    apply plugin: 'org.springframework.boot'
    //A Gradle plugin that provides Maven-like dependency management functionality
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-devtools'
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
    dependencyManagement {
        imports {
            //spring bom helps us to declare dependencies without specifying version numbers.
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:2.2.1.RELEASE"
        }
    }
    jar {
        manifest.attributes provider: 'gradle'
    }
}

//声明gradle脚本自身需要使用的资源
buildscript {
    //repositories为什么要要声明两次
    //buildscript中的声明是gradle脚本自身需要使用的资源。可以声明的资源包括依赖项、第三方插件、maven仓库地址等。
    //而在build.gradle文件中直接声明的依赖项、仓库地址等信息是项目自身需要的资源。
    repositories {
        mavenLocal()
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        mavenCentral()
    }

    ext {
        //这里管理版本
        springbootVersion = '2.4.2'
        springCloudVersion = '2020.0.0'
    }

    dependencies {
        //spring-boot插件
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springbootVersion")
    }

}

