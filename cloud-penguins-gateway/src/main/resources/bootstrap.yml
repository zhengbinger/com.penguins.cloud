spring:
  application:
    name: cloud-penguins-gateway
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_HOST:localhost:8848}
        namespace: penguins
        group: penguins
      config:
        server-addr: ${NACOS_HOST:localhost:8848}
        group: penguins
        file-extension: yml
        namespace: penguins

    gateway:
      discovery:
        locator:
          # 表示将请求路径的服务名配置改成小写,因为服务注册的时候，向注册中心注册时将服务名转成大写的了
          lowerCaseServiceId: true
          # 表示gateway开启服务注册和发现功能,
          # 并且spring cloud gateway 自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务
          enabled: true
      httpclient:
        response-timeout: 5000
        connect-timeout: 5000
      routes:
        - id: auth
          uri: http://localhost:11011 # 请求要转发到的地址
          order: 1                      # 路由的优先级,数字越小级别越高
          predicates: # 断言(就是路由转发要满足的条件)
            - Path=/auth/**             # 当请求路径满足Path指定的规则时,才进行路由转发
          filters: # 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改
            - StripPrefix=1 # 转发之前去掉1层路径
        - id: files
          uri: lb://penguins-files-provider # 请求要转发到的地址
          order: 1                      # 路由的优先级,数字越小级别越高
          predicates: # 断言(就是路由转发要满足的条件)
            - Path=/files/**             # 当请求路径满足Path指定的规则时,才进行路由转发
          filters: # 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改
            - StripPrefix=1 # 转发之前去掉1层路径
        - id: user
          uri: http://localhost:12001 # 请求要转发到的地址
          order: 1                      # 路由的优先级,数字越小级别越高
          predicates: # 断言(就是路由转发要满足的条件)
            - Path=/user/**             # 当请求路径满足Path指定的规则时,才进行路由转发
          filters: # 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改
            - StripPrefix=1 # 转发之前去掉1层路径

management:
  endpoints:
    web:
      exposure:
        include: '*'